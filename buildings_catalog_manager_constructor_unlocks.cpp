    ft_sharedptr<ft_building_definition> defense_turret(new ft_building_definition());
    defense_turret->id = BUILDING_DEFENSE_TURRET;
    defense_turret->name = ft_string("Defense Turret");
    defense_turret->width = 1;
    defense_turret->height = 1;
    defense_turret->logistic_cost = 0;
    defense_turret->logistic_gain = 0;
    defense_turret->energy_cost = 1.5;
    defense_turret->energy_gain = 0.0;
    defense_turret->cycle_time = 0.0;
    defense_turret->inputs.clear();
    defense_turret->outputs.clear();
    defense_turret->build_costs.clear();
    recipe.key = ITEM_IRON_BAR;
    recipe.value = 5;
    defense_turret->build_costs.push_back(recipe);
    recipe.key = ITEM_ENGINE_PART;
    recipe.value = 2;
    defense_turret->build_costs.push_back(recipe);
    defense_turret->mine_bonus = 0.0;
    defense_turret->unique = false;
    defense_turret->occupies_grid = true;
    defense_turret->removable = true;
    this->register_definition(defense_turret);

    ft_sharedptr<ft_building_definition> plasma_turret(new ft_building_definition());
    plasma_turret->id = BUILDING_PLASMA_TURRET;
    plasma_turret->name = ft_string("Plasma Turret");
    plasma_turret->width = 2;
    plasma_turret->height = 1;
    plasma_turret->logistic_cost = 0;
    plasma_turret->logistic_gain = 0;
    plasma_turret->energy_cost = 3.0;
    plasma_turret->energy_gain = 0.0;
    plasma_turret->cycle_time = 0.0;
    plasma_turret->inputs.clear();
    plasma_turret->outputs.clear();
    plasma_turret->build_costs.clear();
    recipe.key = ITEM_MITHRIL_BAR;
    recipe.value = 6;
    plasma_turret->build_costs.push_back(recipe);
    recipe.key = ITEM_ADVANCED_ENGINE_PART;
    recipe.value = 2;
    plasma_turret->build_costs.push_back(recipe);
    recipe.key = ITEM_ACCUMULATOR;
    recipe.value = 1;
    plasma_turret->build_costs.push_back(recipe);
    plasma_turret->mine_bonus = 0.0;
    plasma_turret->unique = false;
    plasma_turret->occupies_grid = true;
    plasma_turret->removable = true;
    this->register_definition(plasma_turret);

    ft_sharedptr<ft_building_definition> railgun_turret(new ft_building_definition());
    railgun_turret->id = BUILDING_RAILGUN_TURRET;
    railgun_turret->name = ft_string("Railgun Turret");
    railgun_turret->width = 2;
    railgun_turret->height = 2;
    railgun_turret->logistic_cost = 0;
    railgun_turret->logistic_gain = 0;
    railgun_turret->energy_cost = 4.5;
    railgun_turret->energy_gain = 0.0;
    railgun_turret->cycle_time = 0.0;
    railgun_turret->inputs.clear();
    railgun_turret->outputs.clear();
    railgun_turret->build_costs.clear();
    recipe.key = ITEM_TITANIUM_BAR;
    recipe.value = 8;
    railgun_turret->build_costs.push_back(recipe);
    recipe.key = ITEM_ADVANCED_ENGINE_PART;
    recipe.value = 3;
    railgun_turret->build_costs.push_back(recipe);
    recipe.key = ITEM_FUSION_REACTOR;
    recipe.value = 1;
    railgun_turret->build_costs.push_back(recipe);
    railgun_turret->mine_bonus = 0.0;
    railgun_turret->unique = false;
    railgun_turret->occupies_grid = true;
    railgun_turret->removable = true;
    this->register_definition(railgun_turret);

    ft_sharedptr<ft_building_definition> flagship_dock(new ft_building_definition());
    flagship_dock->id = BUILDING_FLAGSHIP_DOCK;
    flagship_dock->name = ft_string("Flagship Dock");
    flagship_dock->width = 4;
    flagship_dock->height = 4;
    flagship_dock->logistic_cost = 0;
    flagship_dock->logistic_gain = 2;
    flagship_dock->energy_cost = 5.0;
    flagship_dock->energy_gain = 0.0;
    flagship_dock->cycle_time = 0.0;
    flagship_dock->inputs.clear();
    flagship_dock->outputs.clear();
    flagship_dock->build_costs.clear();
    recipe.key = ITEM_TITANIUM_BAR;
    recipe.value = 12;
    flagship_dock->build_costs.push_back(recipe);
    recipe.key = ORE_NANOMATERIAL;
    recipe.value = 6;
    flagship_dock->build_costs.push_back(recipe);
    recipe.key = ITEM_FUSION_REACTOR;
    recipe.value = 1;
    flagship_dock->build_costs.push_back(recipe);
    flagship_dock->mine_bonus = 0.0;
    flagship_dock->unique = true;
    flagship_dock->occupies_grid = true;
    flagship_dock->removable = true;
    this->register_definition(flagship_dock);

    ft_sharedptr<ft_building_definition> helios_beacon(new ft_building_definition());
    helios_beacon->id = BUILDING_HELIOS_BEACON;
    helios_beacon->name = ft_string("Helios Beacon");
    helios_beacon->width = 2;
    helios_beacon->height = 3;
    helios_beacon->logistic_cost = 0;
    helios_beacon->logistic_gain = 3;
    helios_beacon->energy_cost = 4.0;
    helios_beacon->energy_gain = 2.0;
    helios_beacon->cycle_time = 0.0;
    helios_beacon->inputs.clear();
    helios_beacon->outputs.clear();
    helios_beacon->build_costs.clear();
    recipe.key = ITEM_FUSION_REACTOR;
    recipe.value = 1;
    helios_beacon->build_costs.push_back(recipe);
    recipe.key = ORE_CRYSTAL;
    recipe.value = 10;
    helios_beacon->build_costs.push_back(recipe);
    recipe.key = ORE_TRITIUM;
    recipe.value = 6;
    helios_beacon->build_costs.push_back(recipe);
    helios_beacon->mine_bonus = 0.0;
    helios_beacon->unique = true;
    helios_beacon->occupies_grid = true;
    helios_beacon->removable = true;
    this->register_definition(helios_beacon);

    this->set_building_unlocked(BUILDING_MINE_CORE, true);
    this->set_building_unlocked(BUILDING_SMELTER, true);
    this->set_building_unlocked(BUILDING_PROCESSOR, true);
    this->set_building_unlocked(BUILDING_CRAFTING_BAY, true);
    this->set_building_unlocked(BUILDING_CONVEYOR, true);
    this->set_building_unlocked(BUILDING_TRANSFER_NODE, true);
    this->set_building_unlocked(BUILDING_TRADE_RELAY, false);
    this->set_building_unlocked(BUILDING_POWER_GENERATOR, true);
    this->set_building_unlocked(BUILDING_SOLAR_ARRAY, false);
    this->set_building_unlocked(BUILDING_UPGRADE_STATION, true);
    this->set_building_unlocked(BUILDING_FACILITY_WORKSHOP, false);
    this->set_building_unlocked(BUILDING_SHIPYARD, false);
    this->set_building_unlocked(BUILDING_PROXIMITY_RADAR, false);
    this->set_building_unlocked(BUILDING_MOBILE_RADAR, false);
    this->set_building_unlocked(BUILDING_SHIELD_GENERATOR, false);
    this->set_building_unlocked(BUILDING_TRITIUM_EXTRACTOR, false);
    this->set_building_unlocked(BUILDING_DEFENSE_TURRET, false);
    this->set_building_unlocked(BUILDING_PLASMA_TURRET, false);
    this->set_building_unlocked(BUILDING_RAILGUN_TURRET, false);
    this->set_building_unlocked(BUILDING_FLAGSHIP_DOCK, false);
    this->set_building_unlocked(BUILDING_HELIOS_BEACON, false);
